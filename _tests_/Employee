const Employee = require('../lib/Employee');


test('Can make new employee', () => {
    const newEmployee = new Employee();
    expect(typeof(newEmployee)).toBe("object");
})

test('Testing employee name', () => {
    const name = 'Lauren';
    const newEmployee = new Employee(name);
    expect(newEmployee.name).toBe(name);
})

test('Testing employee ID', () => {
    const id = 1001;
    const newEmployee = new Employee("Lauren", id);
    expect(newEmployee.id).toBe(id);
})


test("Testing employee email.", () => {
    const email = "lburke522@gmail.com";
    const newEmployee = new Employee("Lauren", 2, email);
    expect(newEmployee.email).toBe(email);
})



test("Gets name via getName", () => {
    const testName = "Lauren";
    const newEmployee = new Employee(testName);
    expect(newEmployee.getName()).toBe(testName);
})

test("Gets id via getId", () => {
    const testID = 2;
    const newEmployee = new Employee("Lauren", testID);
    expect(newEmployee.getId()).toBe(testID);
})

test("Gets email via getEmail", () => {
    const testEmail = "lburke522@gmail.com";
    const newEmployee = new Employee("Lauren", 2, testEmail);
    expect(newEmployee.getEmail()).toBe(testEmail);
})

test("Testing role", () => {
    const returnValue = "Employee";
    const newEmployee = new Employee("Lauren", 2, "lburke522@gmail.com");
    expect(newEmployee.getRole()).toBe(returnValue);
})